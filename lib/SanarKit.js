var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;exports.getInfo=getInfo;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _socket=_interopRequireDefault(require("socket.io-client"));var _reactNativeDeviceInfo=_interopRequireDefault(require("react-native-device-info"));function getInfo(_x){return _getInfo.apply(this,arguments);}function _getInfo(){_getInfo=(0,_asyncToGenerator2.default)(function*(cid){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var lang=arguments.length>2?arguments[2]:undefined;var BUNDLE_ID=yield _reactNativeDeviceInfo.default.getBundleId();var response=yield fetch(`https://api.litedev.com/v1/member`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':cid,'sales-channel':'ios','bundle-id':"com.example.demo",'Accept-Language':lang||'en'},body:JSON.stringify(data)});return response.json();});return _getInfo.apply(this,arguments);}var SanarKit=function(){function SanarKit(){(0,_classCallCheck2.default)(this,SanarKit);}return(0,_createClass2.default)(SanarKit,[{key:"connect",value:function(){var _connect=(0,_asyncToGenerator2.default)(function*(cid,info,lang){try{var did=yield _reactNativeDeviceInfo.default.getUniqueId();var _yield$getInfo=yield getInfo(cid,info,lang||'en'),status=_yield$getInfo.status,data=_yield$getInfo.data,message=_yield$getInfo.message,error_message=_yield$getInfo.error_message;console.log('data : ',data);if(status==1000){this.eventListner=(0,_socket.default)(data.messagingUrl,{query:`uid=${data.uid}&did=${did}`});this.session=data;this.info=info;return{message:message,status:true};}else{return{message:error_message,status:false};};}catch(error){throw error;}});function connect(_x2,_x3,_x4){return _connect.apply(this,arguments);}return connect;}()},{key:"disconnect",value:function disconnect(){if(this.eventListner){this.eventListner.disconnect();console.log("Disconnected with Sanar");}}}]);}();;var _default=exports.default=new SanarKit();